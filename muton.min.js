!function(){var reactions_chemicaljs,enzymes_helicase,reactions_matchers_regex,reactions_matchers_numeric_quantifier,reactions_match_readingjs,enzymes_primase,mutators_bucket,mutators_throttle,mutators_gene_pairing,reactions_proof_reading,enzymes_polymerase,muton,define=amdefine(module);reactions_chemicaljs=function(require){var _=lodash;return{separateProperties:function(userProperties,feature){return{userPropertyNames:_.keys(userProperties),featurePropertyNames:_.keys(feature)}}}}({});var define=amdefine(module);enzymes_helicase=function(require){var chemicalReactions=reactions_chemicaljs;return{breakProperties:function(userProperties,feature){return chemicalReactions.separateProperties(userProperties,feature)}}}({});var define=amdefine(module);reactions_matchers_regex=function(){function sanitizeRegexStr(regexStr){return regexStr.substring(1,regexStr.length-1)}var regexDelimiters=/^\/.+\/$/;return{isRegex:function(value){return regexDelimiters.test(value)},matchesPropertyValue:function(propertyValue,regexStr){var sanitisedRegex=sanitizeRegexStr(regexStr),regex=new RegExp("^"+sanitisedRegex+"$");return regex.test(propertyValue)}}}();var define=amdefine(module);reactions_matchers_numeric_quantifier=function(){function isExpressionValid(expression){return validExpressionRegex.test(expression)}var numberRegex=/-?\d+(\.\d{1,2})?/,operatorRegex=/[><]=?/,numericQuantifierRegex=new RegExp(operatorRegex.source+numberRegex.source),validExpressionRegex=new RegExp(numberRegex.source+operatorRegex.source+numberRegex.source);return{isNumber:function(value){return numberRegex.test(value)},isNumericQuantifier:function(value){return numericQuantifierRegex.test(value)},matchesPropertyValue:function(propertyValue,numericQuantifierStr){var expression=propertyValue+numericQuantifierStr;return isExpressionValid(expression)?eval(expression):!1}}}();var define=amdefine(module);reactions_match_readingjs=function(require){function pickMatcher(userPropertyValue,propertyKey){return regexMatcher.isRegex(propertyKey)?regexMatcher:numericMatcher.isNumber(userPropertyValue)&&numericMatcher.isNumericQuantifier(propertyKey)?numericMatcher:defaultMatcher}var _=lodash,regexMatcher=reactions_matchers_regex,numericMatcher=reactions_matchers_numeric_quantifier,defaultMatcher={matchesPropertyValue:function(userPropertyValue,propertyKey){return userPropertyValue===propertyKey}};return{getMatchedProperties:function(userPropertyValue,featureProperty){return _.findLast(featureProperty,function(propertyValue,propertyKey){var matcher=pickMatcher(userPropertyValue,propertyKey);return matcher.matchesPropertyValue(userPropertyValue,propertyKey)})}}}({});var define=amdefine(module);enzymes_primase=function(require){function mergeProperties(primer,feature){var properties=getFeatureProperties(feature);_.merge(primer,properties)}function isFeatureDisabled(primer,root){var toggle=_.get(primer,"toggle");return root&&toggle===!1}function getFeatureProperties(feature){return _.pick(feature,["toggle","throttle","buckets"])}function containsFeatureProperties(obj){return _.has(obj,"toggle")||_.has(obj,"throttle")||_.has(obj,"buckets")}function getPropertiesNode(userProperties,featurePropertyName,feature){var featureProperty=feature[featurePropertyName],userPropertyValue=userProperties[featurePropertyName],properties=matchReading.getMatchedProperties(userPropertyValue,featureProperty);return pickMatchedProperties(properties,featureProperty)}function pickMatchedProperties(childProperties,parentProperties){return _.isUndefined(childProperties)?parentProperties:childProperties}function bindPrimer(primerInstructions,childPrimer){_.merge(primerInstructions,childPrimer)}var _=lodash,chemicalReactions=reactions_chemicaljs,matchReading=reactions_match_readingjs;return{preparePrimer:function(userProperties,feature,propertyStrands,root){var self=this,primerInstructions={},userPropertyNames=propertyStrands.userPropertyNames,featurePropertyNames=propertyStrands.featurePropertyNames;return containsFeatureProperties(feature)&&mergeProperties(primerInstructions,feature),isFeatureDisabled(primerInstructions,root)||featurePropertyNames.forEach(function(featurePropertyName){if(_.contains(userPropertyNames,featurePropertyName)){var propertiesNode=getPropertiesNode(userProperties,featurePropertyName,feature),childStrands=chemicalReactions.separateProperties(userProperties,propertiesNode),childPrimer=self.preparePrimer(userProperties,propertiesNode,childStrands);bindPrimer(primerInstructions,childPrimer)}}),primerInstructions}}}({});var define=amdefine(module);mutators_bucket=function(require){function pickOneElement(array){if(!_.isArray(array))throw"Not an array!";var index=Math.floor(Math.random()*array.length);return array[index]}function isBucketGene(gene){return!_.isEmpty(gene)&&"bucket"===gene.type}function containsGene(featureProperties,gene){return _.includes(featureProperties.buckets,gene.toggle)}var _=lodash;return{mutate:function(featureProperties,gene){return isBucketGene(gene)&&containsGene(featureProperties,gene)?gene.toggle:pickOneElement(featureProperties.buckets)},containsMultivariant:function(featureProperties){return this.isBucketListValid(featureProperties.buckets)},isBucketListValid:function(bucketList){return _.isArray(bucketList)&&bucketList.length>=0}}}({});var define=amdefine(module);mutators_throttle=function(require){function getPercentageDecimal(throttle){var percentage=extractPercentage(throttle),value=percentage.substr(0,percentage.length-2);return value/10}function extractPercentage(throttle){var percentage;return percentage=isThrottleNode(throttle)?throttle.value:throttle}function isThrottleValid(throttle){return isThrottleNode(throttle)||isPercentage(throttle)}function isThrottleNode(throttle){return _.isPlainObject(throttle)&&_.isString(throttle.value)&&isPercentage(throttle.value)}function isPercentage(value){return!_.isUndefined(value)&&_.isString(value)&&value.match(/[0-100]%/)}function isThrottleGene(gene){return!_.isEmpty(gene)&&"throttle"===gene.type}function shouldMutate(throttle){return!_.isUndefined(throttle.mutate)&&"force"===throttle.mutate}var _=lodash;return{mutate:function(throttle,gene){if(!shouldMutate(throttle)&&isThrottleGene(gene))return gene.toggle;var percentage=getPercentageDecimal(throttle);return Math.random()<percentage},isThrottleValid:function(throttle){return isThrottleValid(throttle)}}}({});var define=amdefine(module);mutators_gene_pairing=function(require){function containTogglesPair(genes,featureName){return hasPartialName(_.keys(genes.toggles),featureName)}function containBucketsPair(genes,featureName){return hasPartialName(genes.buckets,featureName)}function containThrottlesPair(genes,featureName){return hasPartialName(genes.throttles,featureName)}function hasPartialName(featureNames,partialName){return findWithPartialName(featureNames,partialName).length>0}function findWithPartialName(featureNames,partialName){return _.filter(featureNames,function(featureName){return 0===featureName.indexOf(partialName)})}function getMatchingBucket(genes,featureName){var matchedFeatures=findWithPartialName(genes.buckets,featureName),matched=_.find(matchedFeatures,function(matchedBucket){return genes.toggles[matchedBucket]});return _.isString(matched)?getBucketNameFromFeatureName(matched):""}function getBucketNameFromFeatureName(featureName){var dotIndex=featureName.indexOf(".");return dotIndex>=0?featureName.substring(dotIndex+1):""}var _=lodash;return{pairGene:function(genes,featureName){var gene={};if(containTogglesPair(genes,featureName)){var type="toggle",name=genes.toggles[featureName];containBucketsPair(genes,featureName)?(type="bucket",name=getMatchingBucket(genes,featureName)):containThrottlesPair(genes,featureName)&&(type="throttle"),gene.toggle=name,gene.type=type}return gene}}}({});var define=amdefine(module);reactions_proof_reading=function(require){var _=lodash,bucketMutator=mutators_bucket,throttleMutator=mutators_throttle;return{areInstructionsValid:function(featureInstructions){var toggle=_.get(featureInstructions,"toggle"),throttle=_.get(featureInstructions,"throttle"),buckets=_.get(featureInstructions,"buckets");return this.isToggleValid(toggle)&&this.isThrottleValid(throttle)&&this.areBucketsValid(buckets)},isToggleValid:function(toggle){return _.isUndefined(toggle)||_.isBoolean(toggle)},isThrottleValid:function(throttle){return _.isUndefined(throttle)||throttleMutator.isThrottleValid(throttle)},areBucketsValid:function(buckets){return _.isUndefined(buckets)||bucketMutator.isBucketListValid(buckets)},checkFeatureInstructions:function(featureInstructions){var valid=_.isUndefined(featureInstructions)||_.isNull(featureInstructions)||!_.isArray(featureInstructions)&&_.isObject(featureInstructions);if(!valid)throw new Error("Invalid feature instructions!")}}}({});var define=amdefine(module);enzymes_polymerase=function(require){function addToFeatures(features,featureName,toggle){return features.push(_.merge({name:featureName},toggle))}function processFeatureInstructions(featureProperties,gene){var toggle={type:"toggle",toggle:!1};return featureProperties.toggle!==!1&&(throttleMutator.isThrottleValid(featureProperties.throttle)?(toggle.toggle=throttleMutator.mutate(featureProperties.throttle,gene),toggle.type="throttle"):featureProperties.toggle===!0&&(toggle.toggle=!0)),toggle}function containsBuckets(toggle,featureInstructions){return toggle.toggle&&bucketMutator.containsMultivariant(featureInstructions)}function addBucketToFeatures(features,featureName,featureInstructions,toggle,gene){var bucketName=bucketMutator.mutate(featureInstructions,gene),bucketToggle={toggle:toggle.toggle,type:"bucket"};addToFeatures(features,featureName+"."+bucketName,bucketToggle)}var _=lodash,bucketMutator=mutators_bucket,throttleMutator=mutators_throttle,genePairing=mutators_gene_pairing,proofReader=reactions_proof_reading;return{assembleFeatures:function(featureName,primerInstructions,ancestorGenes){var features=[];if(proofReader.areInstructionsValid(primerInstructions)){var gene=genePairing.pairGene(ancestorGenes,featureName),toggle=processFeatureInstructions(primerInstructions,gene);addToFeatures(features,featureName,toggle),containsBuckets(toggle,primerInstructions)&&addBucketToFeatures(features,featureName,primerInstructions,toggle,gene)}else addToFeatures(features,featureName,{toggle:!1,type:"toggle"});return features}}}({}),function(){var hasExports=(amdefine(module),"undefined"!=typeof module&&module.exports);muton=function(require){function joinToggles(features,resolvedFeatures){features.toggles=_.reduce(resolvedFeatures,function(result,elem){return result[elem.name]=elem.toggle,result},features.toggles)}function joinThrottles(features,resolvedFeatures){var buckets=_.chain(resolvedFeatures).filter({type:"bucket"}).pluck("name").value();features.buckets=features.buckets.concat(buckets)}function joinBuckets(features,resolvedFeatures){var throttles=_.chain(resolvedFeatures).filter({type:"throttle"}).pluck("name").value();features.throttles=features.throttles.concat(throttles)}function joinMutations(features,resolvedFeatures){joinToggles(features,resolvedFeatures),joinThrottles(features,resolvedFeatures),joinBuckets(features,resolvedFeatures)}var _=lodash,helicase=enzymes_helicase,primase=enzymes_primase,polymerase=enzymes_polymerase,proofReading=reactions_proof_reading,muton={getFeatureMutations:function(userProperties,featureInstructions){return this.getMutations(userProperties,featureInstructions).toggles},getMutations:function(userProperties,featureInstructions){return this.inheritMutations(userProperties,featureInstructions,{})},inheritMutations:function(userProperties,featureInstructions,ancestorGenes){var features={toggles:{},buckets:[],throttles:[]};return proofReading.checkFeatureInstructions(featureInstructions),_.forEach(featureInstructions,function(feature,featureName){var propertyChains=helicase.breakProperties(userProperties,feature),primer=primase.preparePrimer(userProperties,feature,propertyChains,!0),resolvedFeatures=polymerase.assembleFeatures(featureName,primer,ancestorGenes);joinMutations(features,resolvedFeatures)}),features}};return hasExports?exports=muton:this.muton=muton,muton}({})}.call(this)}();